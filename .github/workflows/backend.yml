name: backend

on:
  push:
    branches: main
    paths:
      - '.github/workflows/backend.yml'
      - 'api/**'
  pull_request:
    branches: main
    paths:
      - '.github/workflows/backend.yml'
      - 'api/**'
  release:
    types: [published]

env:
  PYTHON_VERSION: "3.11"
  UV_VERSION: "0.9.5"
  DOCKER_PLATFORM: "linux/amd64"

jobs:
  uvicorn:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
          activate-environment: true
      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('api/uv.lock') }}
      - name: Install backend
        run: |
          make install-backend
      - name: Run uvicorn
        run: |
          screen -dm uvicorn app.main:app --reload --host 0.0.0.0 --port 8080 --proxy-headers --use-colors --log-level info --app-dir ./api
          sleep 10
          curl http://localhost:8080/health

  docker:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-buildx-action@v3
      - uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-backend-${{ hashFiles('api/uv.lock') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-backend-${{ hashFiles('api/uv.lock') }}-
            ${{ runner.os }}-buildx-backend-
            ${{ runner.os }}-buildx-
      - name: Build image
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: true
        with:
          push: false
          load: true
          context: ./api
          tags: |
            ${{ github.event.repository.name }}-backend:latest
          platforms: ${{ env.DOCKER_PLATFORM }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      # Temp fix for https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
          activate-environment: true
      - name: Run docker test
        run: |
          make install-backend
          make test-backend

  ghcr:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      packages: write
      contents: read
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-buildx-action@v3
      - name: Generate metadata
        id: meta
        run: |
          echo "date=$(date -u +"%Y-%m-%dT%H-%M-%S")" >> $GITHUB_OUTPUT
          echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "version=$(grep -E '^version = ' api/pyproject.toml | sed 's/version = "\(.*\)"/\1/')" >> $GITHUB_OUTPUT
      - name: Docker meta
        id: labels
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: index
        with:
          images: ghcr.io/${{ github.repository }}-backend
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-backend-${{ hashFiles('api/uv.lock') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-backend-${{ hashFiles('api/uv.lock') }}-
            ${{ runner.os }}-buildx-backend-
            ${{ runner.os }}-buildx-
      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: true
        with:
          push: true
          context: ./api
          platforms: ${{ env.DOCKER_PLATFORM }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          tags: |
            ghcr.io/${{ github.repository }}-backend:latest
            ghcr.io/${{ github.repository }}-backend:${{ steps.meta.outputs.date }}
            ghcr.io/${{ github.repository }}-backend:${{ steps.meta.outputs.commit }}
            ghcr.io/${{ github.repository }}-backend:${{ steps.meta.outputs.version }}
          labels: ${{ steps.labels.outputs.labels }}
          annotations: ${{ steps.labels.outputs.annotations }}
      # Temp fix for https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - uses: actions/attest-build-provenance@v3
        continue-on-error: true
        with:
          subject-name: ghcr.io/${{ github.repository }}-backend
          subject-digest: ${{ steps.build.outputs.digest }}
